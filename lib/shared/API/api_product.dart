// Import th∆∞ vi·ªán c·∫ßn thi·∫øt
import 'dart:convert'; // Th∆∞ vi·ªán chuy·ªÉn ƒë·ªïi JSON
import 'package:http/http.dart' as http; // Th∆∞ vi·ªán HTTP
import '../../core/constants/api_endpoints.dart'; // Import API endpoints
import '../../shared/models/product_models.dart'; // Import Product model

//Class ch∆∞a API call product
class ProductApiService {
  // H√†m l·∫•y s·∫£n ph·∫©m theo category ID
  static Future<List<Product>> getProductsByCategory(int categoryId) async {
    try {
      // T·∫°o URL v·ªõi query parameter
      final url =
          '${ApiEndpoints.baseUrl}/products-by-category?category_id=$categoryId';
      print('üîÑ ƒêang g·ªçi API Product: $url'); // Log debug

      // G·ªçi HTTP GET request
      final response = await http
          .get(
            Uri.parse(url), // Chuy·ªÉn string th√†nh Uri
            headers: {
              'Content-Type': 'application/json', // Header content type
              'Accept': 'application/json', // Header accept
            },
          )
          .timeout(const Duration(seconds: 15)); // Timeout 15 gi√¢y

      // Log response ƒë·ªÉ debug
      print('üì° Product Response status: ${response.statusCode}');
      print('üìù Product Response body: ${response.body}');

      // Ki·ªÉm tra status code th√†nh c√¥ng
      if (response.statusCode == 200) {
        // Parse JSON response
        final Map<String, dynamic> data = json.decode(response.body);

        // Ki·ªÉm tra c√≥ field 'data' kh√¥ng
        if (data['data'] != null) {
          final List<dynamic> productList =
              data['data']; // L·∫•y danh s√°ch products

          // Convert t·ª´ng item th√†nh Product object
          return productList.map((json) => Product.fromJson(json)).toList();
        } else {
          throw Exception('D·ªØ li·ªáu kh√¥ng ƒë√∫ng ƒë·ªãnh d·∫°ng');
        }
      } else {
        throw Exception('Server tr·∫£ v·ªÅ l·ªói: ${response.statusCode}');
      }
    } catch (e) {
      print('‚ùå ProductFF API Error: $e'); // Log l·ªói
      throw Exception('L·ªói khi t·∫£i s·∫£n ph·∫©m: $e');
    }
  }
}
